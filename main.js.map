{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/access-request-details-user/access-request-details-user.component.css","webpack:///./src/app/access-request-details-user/access-request-details-user.component.html","webpack:///./src/app/access-request-details-user/access-request-details-user.component.ts","webpack:///./src/app/access-request-details/access-request-details.component.css","webpack:///./src/app/access-request-details/access-request-details.component.html","webpack:///./src/app/access-request-details/access-request-details.component.ts","webpack:///./src/app/access-request/access-request.component.css","webpack:///./src/app/access-request/access-request.component.html","webpack:///./src/app/access-request/access-request.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/diagnostics/diagnostics.component.css","webpack:///./src/app/diagnostics/diagnostics.component.html","webpack:///./src/app/diagnostics/diagnostics.component.ts","webpack:///./src/app/health-record/health-record.component.css","webpack:///./src/app/health-record/health-record.component.html","webpack:///./src/app/health-record/health-record.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/patient-overview/patient-overview.component.css","webpack:///./src/app/patient-overview/patient-overview.component.html","webpack:///./src/app/patient-overview/patient-overview.component.ts","webpack:///./src/app/qr-code-scanner/qr-code-scanner.component.css","webpack:///./src/app/qr-code-scanner/qr-code-scanner.component.html","webpack:///./src/app/qr-code-scanner/qr-code-scanner.component.ts","webpack:///./src/app/qr-code/qr-code.component.css","webpack:///./src/app/qr-code/qr-code.component.html","webpack:///./src/app/qr-code/qr-code.component.ts","webpack:///./src/app/services/storage.service.ts","webpack:///./src/app/sick-note-overview/sick-note-overview.component.css","webpack:///./src/app/sick-note-overview/sick-note-overview.component.html","webpack:///./src/app/sick-note-overview/sick-note-overview.component.ts","webpack:///./src/app/smart-recipe-details/smart-recipe-details.component.css","webpack:///./src/app/smart-recipe-details/smart-recipe-details.component.html","webpack:///./src/app/smart-recipe-details/smart-recipe-details.component.ts","webpack:///./src/app/smart-recipe-overview/smart-recipe-overview.component.css","webpack:///./src/app/smart-recipe-overview/smart-recipe-overview.component.html","webpack:///./src/app/smart-recipe-overview/smart-recipe-overview.component.ts","webpack:///./src/app/therapy-details/therapy-details.component.css","webpack:///./src/app/therapy-details/therapy-details.component.html","webpack:///./src/app/therapy-details/therapy-details.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Anfrage von:\\\" value={{from}} readonly>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Anfrage an:\\\" value={{to}} readonly>\\n    </mat-form-field>\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"ds\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"therapy\\\">\\n      <th mat-header-cell *matHeaderCellDef> Behandlung </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.therapy}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"diagnose\\\">\\n      <th mat-header-cell *matHeaderCellDef> Diagnose </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <mat-checkbox\\n          class=\\\"example-margin\\\"\\n          [(ngModel)]=\\\"element.diagnose.checked\\\"\\n          [(indeterminate)]=\\\"element.diagnose.indeterminate\\\"\\n          [disabled]=\\\"element.diagnose.disabled\\\">\\n        </mat-checkbox>\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"recipe\\\">\\n      <th mat-header-cell *matHeaderCellDef> Rezept </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <mat-checkbox\\n          class=\\\"example-margin\\\"\\n          [(ngModel)]=\\\"element.recipe.checked\\\"\\n          [(indeterminate)]=\\\"element.recipe.indeterminate\\\"\\n          [disabled]=\\\"element.recipe.disabled\\\">\\n        </mat-checkbox>\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"incapacity\\\">\\n      <th mat-header-cell *matHeaderCellDef> Arbeitsunfähigkeit </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <mat-checkbox\\n          class=\\\"example-margin\\\"\\n          [(ngModel)]=\\\"element.incapacity.checked\\\"\\n          [(indeterminate)]=\\\"element.incapacity.indeterminate\\\"\\n          [disabled]=\\\"element.incapacity.disabled\\\">\\n        </mat-checkbox>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n  \\n  <div fxLayout=\\\"row\\\">\\n    <button mat-raised-button>Speichern</button>\\n    <button mat-raised-button>Zurück</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material';\n\n@Component({\n  selector: 'app-access-request-details-user',\n  templateUrl: './access-request-details-user.component.html',\n  styleUrls: ['./access-request-details-user.component.css']\n})\nexport class AccessRequestDetailsUserComponent implements OnInit {\n  from = \"Dr. Acula\"\n  to = \"Van Helsing\"\n  displayedColumns = ['therapy', 'diagnose', 'recipe', 'incapacity'];\n  ds = new MatTableDataSource(ELEMENT_DATA);\n  constructor() { }\n\n\n  ngOnInit() {\n  }\n}\nexport class CheckboxAttributes {\n  checked: boolean;\n  indeterminate: boolean;\n  disabled: boolean;\n\n  constructor(initChecked) {\n    this.checked = initChecked;\n    this.indeterminate = false;\n    this.disabled = false;\n  }\n}\n\nexport interface Therapy {\n  therapy: string;\n  diagnose: CheckboxAttributes;\n  recipe: CheckboxAttributes;\n  incapacity: CheckboxAttributes;\n}\n\nconst ELEMENT_DATA: Therapy[] = [\n  {therapy: 'Behandlung 1', diagnose : new CheckboxAttributes(false), recipe : new CheckboxAttributes(true), incapacity : new CheckboxAttributes(false)},\n  {therapy: 'Behandlung 1', diagnose : new CheckboxAttributes(true), recipe : new CheckboxAttributes(true), incapacity : new CheckboxAttributes(false)},\n  {therapy: 'Behandlung 1', diagnose : new CheckboxAttributes(true), recipe : new CheckboxAttributes(true), incapacity : new CheckboxAttributes(false)}\n];\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Anfrage von:\\\" value={{from}} readonly>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Anfrage an:\\\" value={{to}} readonly>\\n    </mat-form-field>\\n  </div>\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n    <mat-form-field>\\n      <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Einsicht ab:\\\" [formControl]=\\\"date\\\" readonly>\\n      <mat-datepicker #picker1></mat-datepicker>\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Kategorie\\\" [formControl]=\\\"detailsCategory\\\" required>\\n        <mat-option *ngFor=\\\"let item of details\\\" [value]=\\\"details\\\">\\n          {{item.name}}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error *ngIf=\\\"detailsCategory.hasError('required')\\\">Bitte wählen Sie eine Kategorie</mat-error>\\n      <mat-hint>{{detailsCategory.value?.name}}</mat-hint>\\n    </mat-form-field>\\n\\n    <mat-checkbox\\n      class=\\\"example-margin\\\"\\n      [(ngModel)]=\\\"checkedDiagnose\\\"\\n      [(indeterminate)]=\\\"indeterminateDiagnose\\\"\\n      [labelPosition]=\\\"before\\\"\\n      [disabled]=\\\"disabledDiagnose\\\">\\n      Diagnose\\n    </mat-checkbox>\\n    <mat-checkbox\\n      class=\\\"example-margin\\\"\\n      [(ngModel)]=\\\"checkedRecipe\\\"\\n      [(indeterminate)]=\\\"indeterminateRecipe\\\"\\n      [labelPosition]=\\\"before\\\"\\n      [disabled]=\\\"disabledRecipe\\\">\\n      Rezept\\n    </mat-checkbox>\\n    <mat-checkbox\\n      class=\\\"example-margin\\\"\\n      [(ngModel)]=\\\"checkedIncapacity\\\"\\n      [(indeterminate)]=\\\"indeterminateIncapacity\\\"\\n      [labelPosition]=\\\"before\\\"\\n      [disabled]=\\\"disabledIncapacity\\\">\\n      Arbeitsunfähigkeit\\n    </mat-checkbox>\\n  </div>\\n\\n  <div fxLayout=\\\"row\\\">\\n    <button mat-raised-button>Speichern</button>\\n    <button mat-raised-button>Zurück</button>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-access-request-details',\n  templateUrl: './access-request-details.component.html',\n  styleUrls: ['./access-request-details.component.css']\n})\nexport class AccessRequestDetailsComponent implements OnInit {\n  from = \"Dr. Acula\"\n  to = \"Van Helsing\"\n  date = new FormControl(new Date());\n  serializedDate = new FormControl((new Date()).toISOString());\n  detailsCategory = new FormControl('', [Validators.required]);\n  details = [\n    {name: 'Alles'},\n    {name: 'Allergie'},\n    {name: 'Akute Erkrankungen'},\n    {name: 'Chronische Erkrankungen'},\n    {name: 'Sonstiges'},\n    {name: 'Mag Rosenkohl'}\n  ];\n\n  checkedDiagnose = false;\n  indeterminateDiagnose = false;\n  disabledDiagnose = false;\n\n  checkedRecipe = false;\n  indeterminateRecipe = false;\n  disabledRecipe = false;\n\n  checkedIncapacity = false;\n  indeterminateIncapacity = false;\n  disabledIncapacity = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<table mat-table [dataSource]=\\\"ds\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <ng-container matColumnDef=\\\"datum\\\">\\n    <th mat-header-cell *matHeaderCellDef> Datum </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.datum}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"antragsteller\\\">\\n    <th mat-header-cell *matHeaderCellDef> Antragsteller </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.antragsteller}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"status\\\">\\n    <th mat-header-cell *matHeaderCellDef> Status </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"details\\\">\\n    <th mat-header-cell *matHeaderCellDef> Details </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> <button mat-raised-button>Anfragedetails öffnen {{element.details}}</button> </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n<br>\\n<button mat-raised-button>QR-Code</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material';\n\n@Component({\n  selector: 'app-access-request',\n  templateUrl: './access-request.component.html',\n  styleUrls: ['./access-request.component.css']\n})\nexport class AccessRequestComponent implements OnInit {\n  displayedColumns = ['datum', 'antragsteller', 'status', 'details'];\n  ds = new MatTableDataSource(ELEMENT_DATA);\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.ds.filter = filterValue;\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\nexport interface Anfrage {\n  datum: string;\n  antragsteller: string;\n  status: string;\n  details: number;\n}\n\nconst ELEMENT_DATA: Anfrage[] = [\n  {datum: '12.05.2018', antragsteller: 'Dr. A', status: 'Offen', details: 1},\n  {datum: '10.05.2018', antragsteller: 'Stiftsapotheke', status: 'Akzeptiert', details: 2},\n];\n","module.exports = \".hl-container {\\n    display: flex;\\n    flex-direction: column;\\n    position: absolute;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n  }\\n  \\n  .hl-is-mobile .hl-toolbar {\\n    position: fixed;\\n    /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\n    z-index: 2;\\n  }\\n  \\n  .hl-sidenav-container {\\n    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\n       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\n    flex: 1;\\n  }\\n  \\n  .hl-is-mobile .hl-sidenav-container {\\n    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\n       `<body>` to be our scrolling element for mobile layouts. */\\n    flex: 1 0 auto;\\n  }\\n  \\n  .hl-toolbar-filler{\\n    /* This fills the remaining space, by using flexbox. \\n       Every toolbar row uses a flexbox row layout. */\\n    flex: 1 1 auto;\\n  }\"","module.exports = \"<div class=\\\"hl-container\\\">\\n\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"hl-toolbar\\\">\\n    <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n\\n    <span>Health Ledger</span>\\n\\n    <span class=\\\"hl-toolbar-filler\\\"></span>\\n    \\n    <mat-icon *ngIf=name>account_circle</mat-icon>\\n    <span *ngIf=name>\\n      {{name}}\\n    </span>\\n\\n  </mat-toolbar>\\n\\n  <mat-sidenav-container class=\\\"hl-sidenav-container\\\">\\n    <mat-sidenav #sidenav mode=\\\"over\\\" [(opened)]=\\\"opened\\\" (click)=\\\"sidenav.close()\\\">\\n      <mat-nav-list>\\n        <a mat-list-item routerLink=\\\"./smart-recipe-overview\\\">Smart-Rezept-Übersicht</a>\\n        <a mat-list-item routerLink=\\\"./smart-recipe-details\\\">Smart-Rezept-Details</a>\\n        <a mat-list-item routerLink=\\\"./health-record\\\">Krankenakte</a>\\n        <a mat-list-item routerLink=\\\"./therapy-details\\\">Behandlungsdetails</a>\\n        <a mat-list-item routerLink=\\\"./diagnostics\\\">Diagnose</a>\\n        <a mat-list-item routerLink=\\\"./patient-overview\\\">Patientenübersicht</a>\\n        <a mat-list-item routerLink=\\\"./access-requests\\\">Einsichtsanfragen</a>\\n        <a mat-list-item routerLink=\\\"./sick-note-overview\\\">Krankenschein-Übersicht</a>\\n        <a mat-list-item routerLink=\\\"./access-request-details-user\\\">Einsichtsanfragendetails Benutzer</a>\\n        <a mat-list-item routerLink=\\\"./access-request-details\\\">Einsichtanfragendetails</a>\\n        <a mat-list-item routerLink=\\\"./qr-code\\\">QR-Code</a>\\n        <a mat-list-item routerLink=\\\"./qr-code-scanner\\\">QR-Code-Scanner</a>\\n        <a mat-list-item routerLink=\\\"./login\\\">Login</a>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n\\n    <mat-sidenav-content>\\n      <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n\\n  </mat-sidenav-container>\\n\\n</div>\"","import { StorageService } from './services/storage.service';\nimport { Component } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  name = '';\n\n  constructor(private storageService: StorageService) {\n    this.name = storageService.getItem('name') ? storageService.getItem('name') : this.name;\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {MaterialModule} from './material.module';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport { QRCodeModule } from 'angularx-qrcode';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LoginComponent} from './login/login.component';\nimport {HealthRecordComponent} from './health-record/health-record.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {TherapyDetailsComponent} from './therapy-details/therapy-details.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SmartRecipeOverviewComponent} from './smart-recipe-overview/smart-recipe-overview.component';\nimport {DiagnosticsComponent} from './diagnostics/diagnostics.component';\nimport {PatientOverviewComponent} from './patient-overview/patient-overview.component';\nimport {AccessRequestComponent} from './access-request/access-request.component';\nimport {SickNoteOverviewComponent} from './sick-note-overview/sick-note-overview.component';\nimport {SmartRecipeDetailsComponent} from './smart-recipe-details/smart-recipe-details.component';\nimport {AccessRequestDetailsUserComponent} from './access-request-details-user/access-request-details-user.component';\nimport {AccessRequestDetailsComponent} from './access-request-details/access-request-details.component';\nimport { QrCodeComponent } from './qr-code/qr-code.component';\nimport { QrCodeScannerComponent } from './qr-code-scanner/qr-code-scanner.component';\n\n\n\nconst appRoutes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'therapy-details', component: TherapyDetailsComponent},\n  {path: 'health-record', component: HealthRecordComponent},\n  {path: 'smart-recipe-overview', component: SmartRecipeOverviewComponent},\n  {path: 'diagnostics', component: DiagnosticsComponent},\n  {path: 'smart-recipe-details', component: SmartRecipeDetailsComponent},\n  {path: 'patient-overview', component: PatientOverviewComponent},\n  {path: 'access-requests', component: AccessRequestComponent},\n  {path: 'sick-note-overview', component: SickNoteOverviewComponent},\n  {path: 'access-request-details-user', component: AccessRequestDetailsUserComponent},\n  {path: 'access-request-details', component: AccessRequestDetailsComponent},\n  {path: 'qr-code', component: QrCodeComponent},\n  {path: 'qr-code-scanner', component: QrCodeScannerComponent},\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    TherapyDetailsComponent,\n    HealthRecordComponent,\n    SmartRecipeOverviewComponent,\n    DiagnosticsComponent,\n    PatientOverviewComponent,\n    AccessRequestComponent,\n    SickNoteOverviewComponent,\n    SmartRecipeDetailsComponent,\n    AccessRequestDetailsUserComponent,\n    AccessRequestDetailsComponent,\n    QrCodeComponent,\n    QrCodeScannerComponent\n  ],\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {enableTracing: true} // <-- debugging purposes only\n    ),\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    //Therapy-Details:\n    FormsModule, ReactiveFormsModule,\n    //End-TherapyDetails\n    QRCodeModule\n  ],\n  exports: [],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <h1 class=\\\"mat-display-1\\\">Health Ledger</h1>\\n\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Kategorie\\\" [formControl]=\\\"detailsCategory\\\" required>\\n      <mat-option>--</mat-option>\\n      <mat-option *ngFor=\\\"let item of details\\\" [value]=\\\"details\\\">\\n        {{item.name}}\\n      </mat-option>\\n    </mat-select>\\n    <mat-error *ngIf=\\\"detailsCategory.hasError('required')\\\">Bitte wählen Sie eine Kategorie</mat-error>\\n    <mat-hint>{{detailsCategory.value?.name}}</mat-hint>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <textarea matInput placeholder=\\\"Diagnose\\\"></textarea>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <textarea matInput placeholder=\\\"Rezept\\\"></textarea>\\n  </mat-form-field>\\n\\n  <mat-accordion>\\n  <mat-expansion-panel>\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        Rezept\\n      </mat-panel-title>\\n      <mat-panel-description>\\n        Rezept ausstellen\\n      </mat-panel-description>\\n    </mat-expansion-panel-header>\\n\\n    <mat-form-field>\\n      <textarea matInput placeholder=\\\"Rezept\\\"></textarea>\\n    </mat-form-field>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n\\n  <mat-accordion>\\n    <mat-expansion-panel>\\n      <mat-expansion-panel-header>\\n        <mat-panel-title>\\n         Arbeitsunfähigkeit\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          Arbeitsunfähigkeitsbescheinigung ausstellen\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Beginn der Arbeitsunfähigkeit\\\" [formControl]=\\\"date\\\" readonly>\\n        <mat-datepicker #picker1></mat-datepicker>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Ende der Arbeitsunfähigkeit\\\" [formControl]=\\\"serializedDate\\\" readonly>\\n        <mat-datepicker #picker2></mat-datepicker>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n      </mat-form-field>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n\\n  <div fxLayout=\\\"row\\\">\\n    <button mat-raised-button>Speichern</button>\\n    <button mat-raised-button>Abbrechen</button>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-diagnostics',\n  templateUrl: './diagnostics.component.html',\n  styleUrls: ['./diagnostics.component.css']\n})\n\nexport class DiagnosticsComponent implements OnInit {\n  detailsCategory = new FormControl('', [Validators.required]);\n  date = new FormControl(new Date());\n  serializedDate = new FormControl((new Date()).toISOString());\n  details = [\n    {name: 'Allergie'},\n    {name: 'Akute Erkrankungen'},\n    {name: 'Chronische Erkrankungen'},\n    {name: 'Sonstiges'},\n    {name: 'Mag Rosenkohl'}\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<table mat-table [dataSource]=\\\"ds\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"datum\\\">\\n    <th mat-header-cell *matHeaderCellDef> Datum </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.datum}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"kategorie\\\">\\n    <th mat-header-cell *matHeaderCellDef> Kategorie </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.kategorie}} </td>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"diagnose\\\">\\n    <th mat-header-cell *matHeaderCellDef> Diagnose </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.diagnose}} </td>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"arzt\\\">\\n    <th mat-header-cell *matHeaderCellDef> Arzt </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.arzt}} </td>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"details\\\">\\n    <th mat-header-cell *matHeaderCellDef> Details </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> <button mat-raised-button>Öffne Id {{element.details}}</button> </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n<br>\\n<button mat-raised-button>Zurück</button>\\n<button mat-raised-button>Behandlung anlegen</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material';\n\n@Component({\n  selector: 'app-health-record',\n  templateUrl: './health-record.component.html',\n  styleUrls: ['./health-record.component.css']\n})\nexport class HealthRecordComponent implements OnInit {\n\n  displayedColumns = ['datum', 'kategorie', 'diagnose', 'arzt', 'details'];\n  ds = new MatTableDataSource(ELEMENT_DATA);\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.ds.filter = filterValue;\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\nexport interface Behandlung {\n  datum: string;\n  kategorie: string;\n  diagnose: string;\n  arzt: string;\n  details: number;\n}\n\nconst ELEMENT_DATA: Behandlung[] = [\n  {datum: '12.05.2018', kategorie: 'Allergie', diagnose: 'Patient reagiert auf Pollen...', arzt: 'Dr. A', details: 1},\n  {datum: '11.05.2018', kategorie: 'Routine', diagnose: 'Blutabnahme zur Einsendung ins Labor...', arzt: 'Dr. B', details: 2},\n  {datum: '04.04.2018', kategorie: 'Routine', diagnose: 'Blutabnahme zur Einsendung ins Labor...', arzt: 'Dr. C', details: 3},\n  {datum: '03.02.2018', kategorie: 'Rückenschmerzen', diagnose: 'Patient äußert Beschwerden im Iliosakralgelenk...', arzt: 'Dr. A', details: 4},\n];\n\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <h1 class=\\\"mat-display-1\\\">Health Ledger</h1>\\n  <mat-card fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n    <mat-card-title>Login</mat-card-title>\\n    <mat-card-subtitle>Zertifikat hochladen</mat-card-subtitle>\\n    <mat-card-content>\\n      <input type=\\\"file\\\" value=\\\"Datei auswählen\\\" (change)=\\\"onChange($event)\\\">\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"","import { StorageService } from './../services/storage.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private storageService: StorageService) { }\n\n  ngOnInit() {\n  }\n\n  onChange(event) {\n    this.storageService.setItem('name', 'Max Mustermann');\n    var files = event.srcElement.files;\n    console.log(files);\n    location.reload();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport {\n  MatButtonModule,\n  MatMenuModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatCardModule,\n  MatListModule,\n  MatSidenavModule,\n  MatCheckboxModule,\n  MatDatepickerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatNativeDateModule,\n  MatTableModule,\n  MatInputModule,\n  MatOptionModule,\n  MatSelectModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatTableModule,\n    MatInputModule,\n    MatOptionModule, MatSelectModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatTableModule,\n    MatInputModule,\n    MatOptionModule, MatSelectModule\n  ]\n})\nexport class MaterialModule {}\n","module.exports = \"\"","module.exports = \"<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<table mat-table [dataSource]=\\\"ds\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"geburtsdatum\\\">\\n    <th mat-header-cell *matHeaderCellDef> Geburtsdatum </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.geburtsdatum}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"publickey\\\">\\n    <th mat-header-cell *matHeaderCellDef> Public Key </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.publickey}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"details\\\">\\n    <th mat-header-cell *matHeaderCellDef> Details </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> <button mat-raised-button>Akte einsehen {{element.details}}</button> </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n<br>\\n<button mat-raised-button>Einsichtsanfrage stellen</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material';\n\n@Component({\n  selector: 'app-patient-overview',\n  templateUrl: './patient-overview.component.html',\n  styleUrls: ['./patient-overview.component.css']\n})\nexport class PatientOverviewComponent implements OnInit {\n  displayedColumns = ['name', 'geburtsdatum', 'publickey', 'details'];\n  ds = new MatTableDataSource(ELEMENT_DATA);\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.ds.filter = filterValue;\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\nexport interface Patient {\n  name: string;\n  geburtsdatum: string;\n  publickey: string;\n  details: number;\n}\n\nconst ELEMENT_DATA: Patient[] = [\n  {name: 'Klöpper, Fynn', geburtsdatum: '24.02.1997', publickey: '1f31j19j31fj1fj8138', details: 1},\n];\n","module.exports = \"\"","module.exports = \"<h2>Test</h2>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-qr-code-scanner',\n  templateUrl: './qr-code-scanner.component.html',\n  styleUrls: ['./qr-code-scanner.component.css']\n})\nexport class QrCodeScannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"mat-display-1\\\">Public Key - Fynn Klöpper</h1>\\n<qrcode [qrdata]=\\\"publicKey\\\" [size]=\\\"256\\\" [level]=\\\"'M'\\\"></qrcode>\\n<br>\\n<button mat-raised-button>Zurück</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-qr-code',\n  templateUrl: './qr-code.component.html',\n  styleUrls: ['./qr-code.component.css']\n})\nexport class QrCodeComponent implements OnInit {\n  public publicKey: string = null;\n  constructor() {\n    this.publicKey = 'Hello World';\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Wrapper service for crud operations on the local Storage\n */\n\n@Injectable({\n    providedIn: 'root',\n  })\nexport class StorageService {\n\n    constructor() { }\n\n    /**\n     * Clears the whole localStorage for the application\n     */\n    clear(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * Gets an item with the given key from the localStorage\n     * @param key The key to get the value from the localStorage\n     * @return {any} The value for the given key if exists, otherwise null\n     */\n    getItem(key: string): string {\n        return localStorage.getItem(key);\n    }\n\n    /**\n     * Gets the literal key on the given index in the localStorage\n     * @param index The index in the localStorage to retrieve the literal key for\n     * @return {string} The literal key for the given index\n     */\n    key(index: number): string {\n        return localStorage.key(index);\n    }\n\n    /**\n     * Removes an item with the given key from the localStorage\n     * @param key The key of the item to remove\n     */\n    removeItem(key: string): void {\n        localStorage.removeItem(key);\n    }\n\n    /**\n     * Sets an item for the given key in the localStorage\n     * @param key The key of the item to set\n     * @param value The value of the item to in the localStorage\n     */\n    setItem(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n}","module.exports = \"\"","module.exports = \"<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<table mat-table [dataSource]=\\\"ds\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <ng-container matColumnDef=\\\"einstelldatum\\\">\\n    <th mat-header-cell *matHeaderCellDef> Einstelldatum </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.einstelldatum}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"von\\\">\\n    <th mat-header-cell *matHeaderCellDef> Von </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.von}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"bis\\\">\\n    <th mat-header-cell *matHeaderCellDef> Bis </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.bis}} </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n<br>\\n<button mat-raised-button>Zurück</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material';\n\n@Component({\n  selector: 'app-sick-note-overview',\n  templateUrl: './sick-note-overview.component.html',\n  styleUrls: ['./sick-note-overview.component.css']\n})\nexport class SickNoteOverviewComponent implements OnInit {\n  displayedColumns = ['einstelldatum', 'von', 'bis'];\n  ds = new MatTableDataSource(ELEMENT_DATA);\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.ds.filter = filterValue;\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\nexport interface Anfrage {\n  einstelldatum: string;\n  von: string;\n  bis: string;\n}\n\nconst ELEMENT_DATA: Anfrage[] = [\n  {einstelldatum: '12.05.2018', von: '12.05.2018', bis: '16.05.2018'},\n  {einstelldatum: '06.05.2018', von: '07.05.2018', bis: '10.05.2018'},\n];\n","module.exports = \"\"","module.exports = \"<form class=\\\"example-form\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Medikamentenname\\\" value=\\\"Ebastel\\\" readonly>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Datum\\\" value=\\\"14.05.2018\\\" readonly>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Dosierung\\\" value=\\\"2x tgl.\\\" readonly>\\n  </mat-form-field>\\n  <br>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Arzt\\\" value=\\\"Dr. Otto\\\" readonly>\\n  </mat-form-field>\\n  <br>\\n  <button mat-raised-button>Einlösen</button>\\n  <button mat-raised-button>Abbrechen</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-smart-recipe-details',\n  templateUrl: './smart-recipe-details.component.html',\n  styleUrls: ['./smart-recipe-details.component.css']\n})\nexport class SmartRecipeDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<table mat-table [dataSource]=\\\"ds\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <ng-container matColumnDef=\\\"datum\\\">\\n    <th mat-header-cell *matHeaderCellDef> Datum </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.datum}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"medikamentname\\\">\\n    <th mat-header-cell *matHeaderCellDef> Medikamentname </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.medikamentname}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"dosierung\\\">\\n    <th mat-header-cell *matHeaderCellDef> Dosierung </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dosierung}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"arzt\\\">\\n    <th mat-header-cell *matHeaderCellDef> Arzt </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.arzt}} </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"details\\\">\\n    <th mat-header-cell *matHeaderCellDef> Details </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> <button mat-raised-button>Rezeptdetails öffnen {{element.details}}</button> </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n<br>\\n<button mat-raised-button>Zurück</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material';\n\n@Component({\n  selector: 'app-smart-recipe-overview',\n  templateUrl: './smart-recipe-overview.component.html',\n  styleUrls: ['./smart-recipe-overview.component.css']\n})\nexport class SmartRecipeOverviewComponent implements OnInit {\n  displayedColumns = ['datum', 'medikamentname', 'dosierung', 'arzt', 'details'];\n  ds = new MatTableDataSource(ELEMENT_DATA);\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.ds.filter = filterValue;\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\nexport interface Rezept {\n  datum: string;\n  medikamentname: string;\n  dosierung: string;\n  arzt: string;\n  details: number;\n}\n\nconst ELEMENT_DATA: Rezept[] = [\n  {datum: '12.05.2018', medikamentname: 'Ebastel', dosierung: '2x tgl.', arzt: 'Dr. A', details: 1},\n];\n","module.exports = \"\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <h1 class=\\\"mat-display-1\\\">Health Ledger</h1>\\n\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Kategorie\\\" value={{category}} readonly>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <textarea matInput placeholder=\\\"Diagnose\\\" value={{diagnose}} readonly></textarea>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <textarea matInput placeholder=\\\"Rezept\\\" value={{recipe}} readonly></textarea>\\n  </mat-form-field>\\n\\n\\n  <div fxLayout=\\\"row\\\">\\n    <mat-form-field>\\n      <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Beginn der Arbeitsunfähigkeit\\\" [formControl]=\\\"date\\\"\\n             readonly>\\n      <mat-datepicker #picker1></mat-datepicker>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Ende der Arbeitsunfähigkeit\\\" [formControl]=\\\"serializedDate\\\"\\n             readonly>\\n      <mat-datepicker #picker2></mat-datepicker>\\n    </mat-form-field>\\n  </div>\\n  <button mat-raised-button>Zurück</button>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-therapy-details',\n  templateUrl: './therapy-details.component.html',\n  styleUrls: ['./therapy-details.component.css']\n})\nexport class TherapyDetailsComponent implements OnInit {\n\n  date = new FormControl(new Date());\n  serializedDate = new FormControl((new Date()).toISOString());\n  category = \"Mag Rosenkohl\"\n  diagnose = \"Massive psychische Störung, wer mag schon Rosenkohl?\"\n  recipe = \"1kg Pizza pro Tag\"\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}